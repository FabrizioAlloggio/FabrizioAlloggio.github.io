/* Algemeen */
body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f39450; /* licht achtergrondkleur zoals in je PDF */
    color: #222;
}

header {
    background-color: #feefc9; /* gebruik je accentkleur uit PDF */
    padding: 20px;
    color: rgb(0, 0, 0);
    text-align: center;
}

header img {
    width: 120px;
    height: 200px;
    border-radius: 50%;
    border: 3px solid white;
}

header h1 {
    margin: 10px 0 5px 0;
    font-size: 2em;
}

header .motto {
    font-style: italic;
    font-size: 1.1em;
}

nav ul {
    list-style: none;
    padding: 0;
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 15px;
}

nav a {
    color: rgb(132, 76, 26);
    text-decoration: none;
    font-weight: bold;
    transition: color 0.3s;
}

nav a:hover {
    color: #c79f41;
}

main {
    padding: 40px 20px;
    max-width: 900px;
    margin: auto;
}

#Tekst {
    /* De oranje achtergrondkleur */
    background-color: #ffb570; 
    
    /* De afgeronde hoeken */
    border-radius: 8px;
    
    /* Ruimte rondom de tekst */
    padding: 20px;
    
    /* Optioneel: een lichte schaduw voor een 3D-effect */
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2); 
    
    /* Optioneel: stelt een maximum breedte in */
    max-width: 500px;
    
    /* Optioneel: letterkleur en -grootte */
    color: #333;
    font-family: sans-serif;
    line-height: 1.5;
}

/* Apply the same homepage text styling to the project page text */
.project-text {
    background-color: #ffb570;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
    max-width: 500px;
    color: #333;
    font-family: sans-serif;
    line-height: 1.5;
    margin-bottom: 1rem; /* give some space below the text block */
}

footer {
    background-color: #222;
    color: white;
    text-align: center;
    padding: 20px;
}

/* Polaroid base styles (reusable) */
.polaroid {
    background: #fff8e6;              /* slightly warm/yellow polaroid frame */
    padding: 6px 6px 10px;            /* tighter frame so white isn't too large */
    border-radius: 4px;
    border: 1px solid #eee;
    box-shadow: 0 8px 14px rgba(0,0,0,0.28);
    text-align: center;
    margin: 0 0 1rem 1rem;            /* restore original left spacing so standalone polaroids offset like Storyline Crafting */
    max-width: 300px;                 /* frame width */
    flex: 0 0 auto;                   /* let width be controlled by container, don't force a flex-basis */
    transform: rotate(-1.5deg);       /* slight tilt like a polaroid */
    transition: transform 160ms ease, box-shadow 160ms ease;
    display: inline-block;            /* keep natural sizing when not in flex */
    height: auto;                     /* ensure polaroid height follows content */
    min-height: 0;
    overflow: visible;                /* rotated cards should not be clipped */
}

.polaroid:hover {
    transform: rotate(0deg) translateY(-4px);
    box-shadow: 0 14px 30px rgba(0,0,0,0.45);
}

.polaroid img {
    display: block;
    width: 100%;
    height: auto;                      /* let image define height; avoid large empty frame */
    border-radius: 2px;
    background: #ddd;                  /* placeholder background if image has transparency */
}

.polaroid img { object-fit: contain; }

.polaroid figcaption {
    font-size: 0.95em;
    color: #222;
    margin-top: 0.4rem;
    font-family: 'Georgia', serif;     /* slightly photographic/captions feel */
    font-weight: 600;                  /* improve readability */
    padding: 0 4px;
}

/* Per-item small rotation tweaks so not every card shares identical tilt */
.lore.polaroid { transform: rotate(-1.5deg); }
.Ability.polaroid { transform: rotate(1.8deg); }
.Game.polaroid { transform: rotate(-0.8deg); }

/* Clearfix for parent sections so floated elements don't overflow */
.clearfix::after,
section::after {
    content: "";
    display: table;
    clear: both;
}

/* Responsive tweak: on small screens stack the image above/below the text */
@media (max-width: 700px) {
    .lore {
        float: none;
        max-width: 100%;
        margin: 1rem 0;
    }
}

/* Flex layout for rows where text + image should sit side-by-side */
.project-row {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
}

.project-row > .side-polaroids {
    align-self: flex-start;
}

.project-text {
    /* text column should take remaining space */
    flex: 1 1 60%;
}

/* Right column used when a project has multiple polaroids that should stack vertically */
.side-polaroids {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex: 0 0 auto; /* let column size naturally */
    width: auto;
    align-items: flex-end; /* align polaroids to the right of the column */
}

/* Tighter stack for side polaroids next to text */
.side-polaroids.tight {
    gap: 0.6rem;
}

.side-polaroids .polaroid {
    margin: 0; /* remove extra left margin inside the column */
    max-width: 300px;
    width: auto; /* allow natural width so the frame doesn't stretch vertically */
}

/* Top polaroid is slightly larger and visually dominant */
.top-polaroid {
    max-width: 360px;
    width: 360px;
    flex: 0 0 360px;
    margin-right: 0; /* ensure flush alignment on the right */
}

/* Side-row: hold smaller polaroids in a horizontal row under the top polaroid */
.side-row {
    display: flex;
    gap: 0.8rem;
    align-items: flex-start;
    justify-content: flex-end; /* push small polaroids to the right edge */
    width: 100%;
}

/* Small variant for polaroids that should be smaller in the side-row */
.small-polaroid {
    max-width: 160px;
    width: 160px;
    flex: 0 0 160px;
}

/* below-row shows multiple polaroids side-by-side directly under the text */
.below-row {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
    justify-content: center; /* center the two photos under the text */
    margin-top: 1rem;
    margin-left: -40px; /* nudge the row left to sit closer to the text */
}

/* Helper: when polaroids should appear below the text (full-width under content) */
.below-polaroids {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 1rem;
    align-items: flex-start;
}

/* Small nudge to move the Roos polaroid slightly to the right */
.roos-shift {
    margin-left: 18px; /* nudge right with margin instead of transform */
}
.Roos.polaroid { transform: rotate(-0.8deg); }

/* ensure float is not used with flex layout (kept for legacy) */
.lore {
    float: none;
}

@media (max-width: 900px) {
    .project-row {
        /* Allow the image to shrink on medium screens */
        align-items: flex-start;
    }

    .lore {
        flex: 0 0 40%;
        max-width: 45%;
    }
}

@media (max-width: 700px) {
    .project-row {
        flex-direction: column;
    }

    .lore {
        flex: none;
        max-width: 100%;
    }
}

@media (max-width: 700px) {
    .polaroid {
        transform: none !important; /* no tilt when stacked on small screens */
        max-width: 100%;
        margin-left: 0;
    }

    /* side column becomes inline below the text on small screens */
    .side-polaroids {
        order: 2;
        flex-direction: column;
        align-items: center;
        width: 100%;
    }
}

/* Lightbox styles: keep in layout and animate opacity/scale for smooth transitions */
#lightbox { 
    position: fixed;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1200;
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    transition: opacity 260ms ease, visibility 0s linear 260ms;
}

#lightbox.open {
    visibility: visible;
    opacity: 1;
    pointer-events: auto;
    transition-delay: 0s;
}

.lightbox-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0,0,0,0.72);
    opacity: 0;
    transition: opacity 260ms ease;
}

#lightbox.open .lightbox-overlay { opacity: 1; }

.lightbox-content {
    position: relative;
    max-width: 90%;
    max-height: 85%;
    background: transparent;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 12px;
    z-index: 1210;
    opacity: 0;
    transform: scale(0.94);
    transition: opacity 260ms ease, transform 360ms cubic-bezier(.22,.9,.28,1);
}

#lightbox.open .lightbox-content { opacity: 1; transform: scale(1); }

/* fade the image in slightly after the content scale to avoid sudden swaps */
#lightboxImage { opacity: 0; transition: opacity 260ms ease 120ms; }
#lightbox.open #lightboxImage { opacity: 1; }

#lightboxImage {
    max-width: 100%;
    max-height: 75vh;
    border-radius: 6px;
    box-shadow: 0 20px 40px rgba(0,0,0,0.6);
}

.lightbox-close {
    position: absolute;
    right: -6px;
    top: -6px;
    background: #fff;
    border: none;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    font-size: 18px;
    cursor: pointer;
    z-index: 1220;
    box-shadow: 0 4px 8px rgba(0,0,0,0.3);
}

#lightboxCaption {
    margin-top: 12px;
    text-align: center;
    font-size: 1rem;
    color: #2a1f12; /* dark text for readability */
    background: rgba(255,248,230,0.98); /* pale warm background for caption */
    padding: 10px 14px;
    border-radius: 6px;
    box-shadow: 0 6px 18px rgba(0,0,0,0.35);
    font-weight: 700;
}

@media (max-width: 700px) {
    #lightboxCaption { font-weight: 700; font-size: 1.02rem; padding: 10px 14px; }
    .lightbox-close { right: 8px; top: 8px; background: #fff8e6; }
}

/* h2 style to match color scheme: padded with warm border */
section#intro h2 {
    display: inline-block;
    background: rgba(255,235,200,0.9); /* softer, warmer background */
    padding: 10px 14px;
    border: 1px solid rgba(199,159,65,0.85); /* softer gold border */
    border-radius: 8px;
    color: #332412;
    margin-bottom: 14px;
    box-shadow: 0 6px 16px rgba(0,0,0,0.06);
}

/* clone animation helper */
.anim-clone {
    pointer-events: none;
    will-change: transform, opacity;
    transition: transform 420ms cubic-bezier(.2,.8,.2,1), opacity 180ms ease;
}

/* when animating, make clone aware of polaroid frame color */
.anim-clone {
    background: #fff8e6;
}

/* improve compositing for smoother animations */
.anim-clone {
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    will-change: transform, opacity;
}
